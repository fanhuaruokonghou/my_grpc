// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: areaMessage.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//圆半径
type Roundness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R float32 `protobuf:"fixed32,1,opt,name=R,proto3" json:"R,omitempty"`
}

func (x *Roundness) Reset() {
	*x = Roundness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_areaMessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Roundness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Roundness) ProtoMessage() {}

func (x *Roundness) ProtoReflect() protoreflect.Message {
	mi := &file_areaMessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Roundness.ProtoReflect.Descriptor instead.
func (*Roundness) Descriptor() ([]byte, []int) {
	return file_areaMessage_proto_rawDescGZIP(), []int{0}
}

func (x *Roundness) GetR() float32 {
	if x != nil {
		return x.R
	}
	return 0
}

//矩形长宽
type Rectangle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width float32 `protobuf:"fixed32,1,opt,name=Width,proto3" json:"Width,omitempty"`
	High  float32 `protobuf:"fixed32,2,opt,name=High,proto3" json:"High,omitempty"`
}

func (x *Rectangle) Reset() {
	*x = Rectangle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_areaMessage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rectangle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rectangle) ProtoMessage() {}

func (x *Rectangle) ProtoReflect() protoreflect.Message {
	mi := &file_areaMessage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rectangle.ProtoReflect.Descriptor instead.
func (*Rectangle) Descriptor() ([]byte, []int) {
	return file_areaMessage_proto_rawDescGZIP(), []int{1}
}

func (x *Rectangle) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Rectangle) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

type AreaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area float32 `protobuf:"fixed32,1,opt,name=Area,proto3" json:"Area,omitempty"`
}

func (x *AreaInfo) Reset() {
	*x = AreaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_areaMessage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaInfo) ProtoMessage() {}

func (x *AreaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_areaMessage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaInfo.ProtoReflect.Descriptor instead.
func (*AreaInfo) Descriptor() ([]byte, []int) {
	return file_areaMessage_proto_rawDescGZIP(), []int{2}
}

func (x *AreaInfo) GetArea() float32 {
	if x != nil {
		return x.Area
	}
	return 0
}

var File_areaMessage_proto protoreflect.FileDescriptor

var file_areaMessage_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x72, 0x65, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x72, 0x65, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x19, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x0c, 0x0a,
	0x01, 0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x52, 0x22, 0x35, 0x0a, 0x09, 0x52,
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x48, 0x69, 0x67, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x48, 0x69,
	0x67, 0x68, 0x22, 0x1e, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x41, 0x72,
	0x65, 0x61, 0x32, 0x64, 0x0a, 0x14, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x41,
	0x72, 0x65, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x6e, 0x65, 0x73, 0x73, 0x1a, 0x15, 0x2e, 0x61, 0x72,
	0x65, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x32, 0x64, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x74,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x72, 0x65, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x72, 0x65, 0x61,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x1a, 0x15, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x04,
	0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_areaMessage_proto_rawDescOnce sync.Once
	file_areaMessage_proto_rawDescData = file_areaMessage_proto_rawDesc
)

func file_areaMessage_proto_rawDescGZIP() []byte {
	file_areaMessage_proto_rawDescOnce.Do(func() {
		file_areaMessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_areaMessage_proto_rawDescData)
	})
	return file_areaMessage_proto_rawDescData
}

var file_areaMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_areaMessage_proto_goTypes = []interface{}{
	(*Roundness)(nil), // 0: areaMessage.Roundness
	(*Rectangle)(nil), // 1: areaMessage.Rectangle
	(*AreaInfo)(nil),  // 2: areaMessage.AreaInfo
}
var file_areaMessage_proto_depIdxs = []int32{
	0, // 0: areaMessage.RoundnessAreaService.GetRoundnessAreaInfos:input_type -> areaMessage.Roundness
	1, // 1: areaMessage.RectangleAreaService.GetRectangleAreaInfos:input_type -> areaMessage.Rectangle
	2, // 2: areaMessage.RoundnessAreaService.GetRoundnessAreaInfos:output_type -> areaMessage.AreaInfo
	2, // 3: areaMessage.RectangleAreaService.GetRectangleAreaInfos:output_type -> areaMessage.AreaInfo
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_areaMessage_proto_init() }
func file_areaMessage_proto_init() {
	if File_areaMessage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_areaMessage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Roundness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_areaMessage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rectangle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_areaMessage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_areaMessage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_areaMessage_proto_goTypes,
		DependencyIndexes: file_areaMessage_proto_depIdxs,
		MessageInfos:      file_areaMessage_proto_msgTypes,
	}.Build()
	File_areaMessage_proto = out.File
	file_areaMessage_proto_rawDesc = nil
	file_areaMessage_proto_goTypes = nil
	file_areaMessage_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RoundnessAreaServiceClient is the client API for RoundnessAreaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoundnessAreaServiceClient interface {
	GetRoundnessAreaInfos(ctx context.Context, opts ...grpc.CallOption) (RoundnessAreaService_GetRoundnessAreaInfosClient, error)
}

type roundnessAreaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRoundnessAreaServiceClient(cc grpc.ClientConnInterface) RoundnessAreaServiceClient {
	return &roundnessAreaServiceClient{cc}
}

func (c *roundnessAreaServiceClient) GetRoundnessAreaInfos(ctx context.Context, opts ...grpc.CallOption) (RoundnessAreaService_GetRoundnessAreaInfosClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RoundnessAreaService_serviceDesc.Streams[0], "/areaMessage.RoundnessAreaService/GetRoundnessAreaInfos", opts...)
	if err != nil {
		return nil, err
	}
	x := &roundnessAreaServiceGetRoundnessAreaInfosClient{stream}
	return x, nil
}

type RoundnessAreaService_GetRoundnessAreaInfosClient interface {
	Send(*Roundness) error
	Recv() (*AreaInfo, error)
	grpc.ClientStream
}

type roundnessAreaServiceGetRoundnessAreaInfosClient struct {
	grpc.ClientStream
}

func (x *roundnessAreaServiceGetRoundnessAreaInfosClient) Send(m *Roundness) error {
	return x.ClientStream.SendMsg(m)
}

func (x *roundnessAreaServiceGetRoundnessAreaInfosClient) Recv() (*AreaInfo, error) {
	m := new(AreaInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RoundnessAreaServiceServer is the server API for RoundnessAreaService service.
type RoundnessAreaServiceServer interface {
	GetRoundnessAreaInfos(RoundnessAreaService_GetRoundnessAreaInfosServer) error
}

// UnimplementedRoundnessAreaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoundnessAreaServiceServer struct {
}

func (*UnimplementedRoundnessAreaServiceServer) GetRoundnessAreaInfos(RoundnessAreaService_GetRoundnessAreaInfosServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRoundnessAreaInfos not implemented")
}

func RegisterRoundnessAreaServiceServer(s *grpc.Server, srv RoundnessAreaServiceServer) {
	s.RegisterService(&_RoundnessAreaService_serviceDesc, srv)
}

func _RoundnessAreaService_GetRoundnessAreaInfos_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RoundnessAreaServiceServer).GetRoundnessAreaInfos(&roundnessAreaServiceGetRoundnessAreaInfosServer{stream})
}

type RoundnessAreaService_GetRoundnessAreaInfosServer interface {
	Send(*AreaInfo) error
	Recv() (*Roundness, error)
	grpc.ServerStream
}

type roundnessAreaServiceGetRoundnessAreaInfosServer struct {
	grpc.ServerStream
}

func (x *roundnessAreaServiceGetRoundnessAreaInfosServer) Send(m *AreaInfo) error {
	return x.ServerStream.SendMsg(m)
}

func (x *roundnessAreaServiceGetRoundnessAreaInfosServer) Recv() (*Roundness, error) {
	m := new(Roundness)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RoundnessAreaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "areaMessage.RoundnessAreaService",
	HandlerType: (*RoundnessAreaServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetRoundnessAreaInfos",
			Handler:       _RoundnessAreaService_GetRoundnessAreaInfos_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "areaMessage.proto",
}

// RectangleAreaServiceClient is the client API for RectangleAreaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RectangleAreaServiceClient interface {
	GetRectangleAreaInfos(ctx context.Context, opts ...grpc.CallOption) (RectangleAreaService_GetRectangleAreaInfosClient, error)
}

type rectangleAreaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRectangleAreaServiceClient(cc grpc.ClientConnInterface) RectangleAreaServiceClient {
	return &rectangleAreaServiceClient{cc}
}

func (c *rectangleAreaServiceClient) GetRectangleAreaInfos(ctx context.Context, opts ...grpc.CallOption) (RectangleAreaService_GetRectangleAreaInfosClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RectangleAreaService_serviceDesc.Streams[0], "/areaMessage.RectangleAreaService/GetRectangleAreaInfos", opts...)
	if err != nil {
		return nil, err
	}
	x := &rectangleAreaServiceGetRectangleAreaInfosClient{stream}
	return x, nil
}

type RectangleAreaService_GetRectangleAreaInfosClient interface {
	Send(*Rectangle) error
	Recv() (*AreaInfo, error)
	grpc.ClientStream
}

type rectangleAreaServiceGetRectangleAreaInfosClient struct {
	grpc.ClientStream
}

func (x *rectangleAreaServiceGetRectangleAreaInfosClient) Send(m *Rectangle) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rectangleAreaServiceGetRectangleAreaInfosClient) Recv() (*AreaInfo, error) {
	m := new(AreaInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RectangleAreaServiceServer is the server API for RectangleAreaService service.
type RectangleAreaServiceServer interface {
	GetRectangleAreaInfos(RectangleAreaService_GetRectangleAreaInfosServer) error
}

// UnimplementedRectangleAreaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRectangleAreaServiceServer struct {
}

func (*UnimplementedRectangleAreaServiceServer) GetRectangleAreaInfos(RectangleAreaService_GetRectangleAreaInfosServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRectangleAreaInfos not implemented")
}

func RegisterRectangleAreaServiceServer(s *grpc.Server, srv RectangleAreaServiceServer) {
	s.RegisterService(&_RectangleAreaService_serviceDesc, srv)
}

func _RectangleAreaService_GetRectangleAreaInfos_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RectangleAreaServiceServer).GetRectangleAreaInfos(&rectangleAreaServiceGetRectangleAreaInfosServer{stream})
}

type RectangleAreaService_GetRectangleAreaInfosServer interface {
	Send(*AreaInfo) error
	Recv() (*Rectangle, error)
	grpc.ServerStream
}

type rectangleAreaServiceGetRectangleAreaInfosServer struct {
	grpc.ServerStream
}

func (x *rectangleAreaServiceGetRectangleAreaInfosServer) Send(m *AreaInfo) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rectangleAreaServiceGetRectangleAreaInfosServer) Recv() (*Rectangle, error) {
	m := new(Rectangle)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RectangleAreaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "areaMessage.RectangleAreaService",
	HandlerType: (*RectangleAreaServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetRectangleAreaInfos",
			Handler:       _RectangleAreaService_GetRectangleAreaInfos_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "areaMessage.proto",
}
